            
            //using Octokit;
            
            // Configurar el cliente de GitHub
            var client = 

       

            new GitHubClient(new ProductHeaderValue("LaMisericordia"));
            client.Credentials = new Credentials("ghp_Ij1058ih____s9VKcU53zERTgu05JsPYjP1t8Q2G");

            // Detalles del archivo a modificar
            string username = "DavidMachadoPY";
            string foldername = "TurnoDinamico";
            string filename = "ShowTurno.html";
            string branch = "main";
 


            // Obtener el contenido del archivo HTML desde GitHub
            var getFile = await client.Repository.Content.Ge
            
            tAllCon
 

            
            tentsByRef(username, foldername, filename, branch);
            string htmlContent = g
             
            
            etFile.F
            
            irst().Content;

            // Generar HTML con el nuevo contenido
            string nuevoContenido = $@"
            <div class='turno' hidden>{codigo
            
            Turno}</div>
            <div class='fechaActualInicio' hidden>{fechaAc
            
            tualI
            
            nicio}</div>
            <div class='usuario' hidden>{num
            
            eroDocumento}</div>
            <div class='servicio' hidden>{service}</div>
            <script src='app.js' def
            
            er></script>";

            // Reemplazar completamente el contenido anterior con el nuevo contenido
            htmlContent = nuevoContenido;

            // Actualizar el archivo en GitHub con el contenido modificado
            var updateFileRequest = new UpdateFileRequest(
                 
                "Actualizando contenido", htmlContent, getFile.Fi
            
            rst().Sha, branch);
            await cli
            
            ent.Repository.Content.Updat
            
            eFile(username, foldername, filename, updateFileRequest);